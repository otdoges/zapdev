{
  "enabled": true,
  "name": "Code Quality Analyzer",
  "description": "Monitors source code files for changes and analyzes modified code for potential improvements including code smells, design patterns, and best practices. Provides suggestions for improving readability, maintainability, and performance while preserving functionality.",
  "version": "1",
  "when": {
    "type": "fileEdited",
    "patterns": [
      "src/**/*.ts",
      "src/**/*.tsx",
      "src/**/*.js",
      "src/**/*.jsx",
      "*.ts",
      "*.tsx",
      "*.js",
      "*.jsx"
    ]
  },
  "then": {
    "type": "askAgent",
    "prompt": "Analyze the recently modified code files for potential improvements. Focus on:\n\n1. **Code Smells**: Identify any code smells like long functions, duplicate code, large classes, or complex conditionals\n2. **Design Patterns**: Suggest appropriate design patterns that could improve the code structure\n3. **Best Practices**: Check adherence to React/TypeScript best practices, including:\n   - Proper hook usage and dependencies\n   - Component composition and separation of concerns\n   - Type safety and TypeScript usage\n   - Performance optimizations (useMemo, useCallback, etc.)\n4. **Readability**: Suggest improvements for variable naming, function structure, and code organization\n5. **Maintainability**: Identify areas that could be refactored for better maintainability\n6. **Performance**: Look for potential performance bottlenecks and optimization opportunities\n\nFor each suggestion, provide:\n- Clear explanation of the issue\n- Specific code example showing the improvement\n- Reasoning for why the change would be beneficial\n- Priority level (High/Medium/Low)\n\nKeep suggestions practical and focused on meaningful improvements that enhance code quality without breaking existing functionality."
  }
}